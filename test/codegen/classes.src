class TAGGED isa ADDER {
  public attribute tag: integer;
};

class ID {
  public attribute id: integer;
};

class ADDER isa TAGGED, ID {
  private attribute a: integer;
  private attribute b: integer;
  public constructor: (A: integer, B: integer);
  public function evaluate: () => integer;
};

// function ADDER::constructor(A: integer, B: integer) {
//   self.a = A;
//   self.b = B;
// }

function ADDER::evaluate() => integer {
//   return (self.a + self.b);
}

function main() => void {
  localvar x: integer;
  localvar y: float;
  localvar z: integer[4][2][1];
  localvar q: ADDER(1, 2, 3);
  x = 1;
  // y = 2.1;

  x = 3 + 1 * 2;
  add(1, 2 + 3);

  while (x < 10) {
    write(x);
    x = x + 1;
  };
}

function add(a: integer, b: integer) => integer {
  return (a + b);
}
